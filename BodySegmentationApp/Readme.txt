Данный проект является демонстрационной прогаммой для трехмерной сегментации набора изображений КТ-снимков легких (пример набора расположен в папке ct_images проекта, необходимо обратить внимание на название изображений - номера в трехзначном формате: 000, 001, 002, и т.д.). В данной программе указывается номер сегмента, принадлежащего телу на снимке. Проект представляет собой решение Microsoft Visual Studio 2015, содержащее проект Windows Forms приложения, использующий .Net Framework не ниже 4.5.2 и использующий для сегментации подключаемую динамическую библиотеку CTImageSegmentation.dll. Данная библиотека реализует сегментацию набора КТ-изображений на языке C++.
При создании проекта в его свойствах сборки было выставлено "Разрешить небезопасный код" для всех конфигураций (Debug и Release), а в ссылки добавлена ссылка на динамическую библиотеку CTImageSegmentation.dll, которая находится в папке lib проекта.
Библиотека CTImageSegmentation.dll имеет одну функцию сегментации набора КТ-снимков легких (CtBodySegmentation). Данная функция принимает на вход одномерный массив всех снимков набора КТ-изображений, записанных по строкам матрицы изображения (byte* intencity_input), одномерный массив, в который будет записан результат сегментации (int* regions_output), а также параметры КТ-изображений (int images_number, int image_height, int image_width), и параметры обработки (int filter_width = 9, int intencity_threshold = 60). Результатом работы функции является одномерный массив, имеющий размерность, совпадающий с размерностью входного одномерного массива изображений, значениями которого являются индексы регионов, соответствующие пикселям массива изображений (т.е. те элементы массива, соответствующие пикселям входного набора изображений, которые во входном массиве, например, принадлежали телу, будут иметь один и тот же индекс на всех изоброажениях - например, индекс 1 принадлежит телу и тогда все значения выходного массива, соответствующие пикселям, принадлежащим телу во входном массиве, будут раны 1). Также некоторые элементы выходного массива (находятся по краям изображений) равны -1: данные элементы соответствуют пикселям, исчезнувшим в результате фильтрации. При обработке выходного массива это следует учитывать. Сама функция возвращает индекс региона, соответствующего телу на изображении (все элементы выходного массива, соответствующие телу, имеют значение равное индексу региона тела).
Для вызова данной функции из программы её следует объявить, импортировав из библиотеки: это проимзводится в строках 10 и 11 файла Form1.cs проекта. Затем данную функцию можно вызвать внутри статической функции, объявленной как unsafe: это функция BodySegmentation (строки 125-155 файла Form1.cs). При этом при вызове функции данные, передующиеся в неё, должны приводится к соответствующему для функции формату, а массивы указателей (т.к. функция использует C++) объявляются в конструкции fixed (строки 139-152 в функции BodySegmentation файла Form1.cs) для того, чтобы Garbage Collector, работоающий в C#, не переместил массивы указателей в памяти во время выполнения функции. После того, как функция отработает, она вернет индекс региона, принадлежащего телу на КТ-изображениях, а в массив regions_output будет записан массив-результат, значения которого прямо внутри конструкции fixed желательно скопировать в другую структуру данных, объявленную в C#.
В данном проекте полученная в результате сегментации матрица используется для отображения сегментов на изображении с помощью цвета. В данном примере сегмент, принадлежащий телу, отображается как белый сегмент, значения матрицы результата, равные -1 (то, что было обрезано в результате фильтрации), отображаются красным цветом, остальные сегменты отображаются черным цветом.
Пимером исопльзования приложения может быть: нажать на кнопку "Open Files", перейти в папку ct_images внтури проекта, выбрать все изображения, и, нажава, "Ок" загрузить их. После того, как все загрузится и отобразится, можно с помощью слайдера перейти на любое изображение, сохранить любое изображение или все сразу.

Update: Добавлена кнопка, чтобы обвести контур маски.